package shroom.dkib.st;

import java.text.DateFormat;
import java.util.Date;

import ioio.lib.api.AnalogInput;
import ioio.lib.api.DigitalOutput;
import ioio.lib.api.IOIO;
import ioio.lib.api.exception.ConnectionLostException;
import ioio.lib.util.BaseIOIOLooper;
import ioio.lib.util.IOIOLooper;
import ioio.lib.util.android.IOIOActivity;
import android.annotation.SuppressLint;
import android.app.ActionBar;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.os.Handler;
import android.view.Menu;
import android.view.View;
import android.widget.SpinnerAdapter;
import android.widget.TextView;
import android.widget.ToggleButton;

public class Main extends ActionBar{
	public ToggleButton switchTerminal1_;
	public ToggleButton switchTerminal2_;
	public ToggleButton switchTerminal3_;
	public ToggleButton switchLamp_;
	public ToggleButton switchAuto_;
	public TextView luxValue_;
	public TextView tempValue_;
	public TextView displayTime_;
	public TextView displayDate_;
	private final Handler mHandler;
	
	private final Runnable mRunnable = new Runnable() {
        public void run() {
        	String currentDate = DateFormat.getDateInstance().format(new Date());
    		dateText(currentDate);
    		String currentTime = DateFormat.getTimeInstance(3).format(new Date());
    		timeText(currentTime);
            mHandler.postDelayed(mRunnable, 1000);
        }
    };
    
    public Main() {
        mHandler = new Handler();
    }

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.main);
		
		switchTerminal1_ = (ToggleButton) findViewById(R.id.Terminal1);
		switchTerminal2_ = (ToggleButton) findViewById(R.id.Terminal2);
		switchTerminal3_ = (ToggleButton) findViewById(R.id.Terminal3);
		switchLamp_ = (ToggleButton) findViewById(R.id.Lamp);
		switchAuto_ = (ToggleButton) findViewById(R.id.AutoMode);
		luxValue_ = (TextView) findViewById(R.id.LuxValue);
		tempValue_ = (TextView) findViewById(R.id.TempValue);
		displayTime_ = (TextView) findViewById(R.id.DisplayTime);
		displayDate_ = (TextView) findViewById(R.id.DisplayDate);
		
		startClock();
		enableUi(false);
	}
	
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}
	
	class Looper extends BaseIOIOLooper {
		public DigitalOutput led_;
		public DigitalOutput terminal1_;
		public DigitalOutput terminal2_;
		public DigitalOutput terminal3_;
		public DigitalOutput lamp_;
		public AnalogInput lux_;
		public AnalogInput temp_;
		
		@Override
		public void setup() throws ConnectionLostException {
			led_ = ioio_.openDigitalOutput(IOIO.LED_PIN, true);
			lamp_ = ioio_.openDigitalOutput(10, true);
			terminal1_ = ioio_.openDigitalOutput(9, true);
			terminal2_ = ioio_.openDigitalOutput(8, true);
			terminal3_ = ioio_.openDigitalOutput(7, true);
			lux_ = ioio_.openAnalogInput(40);
			temp_ = ioio_.openAnalogInput(39);
			enableUi(true);
		}

		@Override
		public void loop() throws ConnectionLostException, InterruptedException {
			float luxRead = lux_.read();
			luxRead = ((2500/luxRead) - 500);
			luxText(luxRead);
			
			float tempRead = temp_.read();
			tempRead = tempRead * 290;
			tempText(tempRead);
			
			led_.write(!switchLamp_.isChecked());
			lamp_.write(switchLamp_.isChecked());
			terminal1_.write(switchTerminal1_.isChecked());
			terminal2_.write(switchTerminal2_.isChecked());
			terminal3_.write(switchTerminal3_.isChecked());
			
			Thread.sleep(10);
		}

		@Override
		public void disconnected() {
			enableUi(false);
		}
	}

	@Override
	protected IOIOLooper createIOIOLooper() {
		return new Looper();
	}

	private void enableUi(final boolean enable) {
		runOnUiThread(new Runnable() {
			@Override
			public void run() {
				switchTerminal1_.setEnabled(enable);
				switchTerminal2_.setEnabled(enable);
				switchTerminal3_.setEnabled(enable);
				switchLamp_.setEnabled(enable);
				switchAuto_.setEnabled(enable);
			}
		});
	}
	
	private void startClock() {
        mHandler.post(mRunnable);
    }
	
	@SuppressLint("DefaultLocale")
	private void luxText(float f) {
		final String str = String.format("%.0f", f);
		runOnUiThread(new Runnable() {
			@Override
			public void run() {
				luxValue_.setText(str);
			}
		});
	}
	
	@SuppressLint("DefaultLocale")
	private void tempText(float f) {
		final String str = String.format("%.0f", f);
		runOnUiThread(new Runnable() {
			@Override
			public void run() {
				luxValue_.setText(str);
			}
		});
	}
	
	private void timeText(String s) {
		final String str = String.format("%s", s);
		runOnUiThread(new Runnable() {
			@Override
			public void run() {
				displayTime_.setText(str);
			}
		});
	}
	
	private void dateText(String s) {
		final String str = String.format("%s", s);
		runOnUiThread(new Runnable() {
			@Override
			public void run() {
				displayDate_.setText(str);
			}
		});
	}

	@Override
	public void setCustomView(View view) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setCustomView(View view, LayoutParams layoutParams) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setCustomView(int resId) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setIcon(int resId) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setIcon(Drawable icon) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setLogo(int resId) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setLogo(Drawable logo) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setListNavigationCallbacks(SpinnerAdapter adapter,
			OnNavigationListener callback) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setSelectedNavigationItem(int position) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getSelectedNavigationIndex() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int getNavigationItemCount() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void setTitle(CharSequence title) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setTitle(int resId) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setSubtitle(CharSequence subtitle) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setSubtitle(int resId) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setDisplayOptions(int options) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setDisplayOptions(int options, int mask) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setDisplayUseLogoEnabled(boolean useLogo) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setDisplayShowHomeEnabled(boolean showHome) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setDisplayHomeAsUpEnabled(boolean showHomeAsUp) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setDisplayShowTitleEnabled(boolean showTitle) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setDisplayShowCustomEnabled(boolean showCustom) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setBackgroundDrawable(Drawable d) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public View getCustomView() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public CharSequence getTitle() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public CharSequence getSubtitle() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int getNavigationMode() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void setNavigationMode(int mode) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getDisplayOptions() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public Tab newTab() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void addTab(Tab tab) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void addTab(Tab tab, boolean setSelected) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void addTab(Tab tab, int position) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void addTab(Tab tab, int position, boolean setSelected) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void removeTab(Tab tab) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void removeTabAt(int position) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void removeAllTabs() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void selectTab(Tab tab) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public Tab getSelectedTab() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Tab getTabAt(int index) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int getTabCount() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int getHeight() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void show() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void hide() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public boolean isShowing() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void addOnMenuVisibilityListener(OnMenuVisibilityListener listener) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void removeOnMenuVisibilityListener(OnMenuVisibilityListener listener) {
		// TODO Auto-generated method stub
		
	}
	
}